#!/usr/bin/env python2

import matplotlib.pyplot as plt
import matplotlib.path as path
import matplotlib.patches as patches
from mpl_toolkits.mplot3d import Axes3D
import numpy as np

v=[
(-0.817921,0.100000,0.880016),
(-0.111959,0.100000,0.893773),
(0.609476,0.100000,0.853651),
(0.689485,0.100000,0.761257),
(0.684770,0.100000,0.584421),
(0.567849,0.133460,0.150999),
(0.613295,0.165426,0.062120),
(0.730985,0.154800,-0.017006),
(0.669611,0.150515,-0.115869),
(0.551678,0.147399,-0.157836),
(0.544013,0.104171,-0.338800),
(0.643198,0.100000,-0.542451),
(0.593605,0.100003,-0.661537),
(0.402778,0.104194,-0.730530),
(0.289995,0.101793,-0.647523),
(0.195849,0.106096,-0.688906),
(0.165871,0.121607,-0.819444),
(0.065464,0.131929,-0.833800),
(-0.067073,0.164313,-0.731685),
(-0.093042,0.158789,-0.586748),
(-0.198970,0.197291,-0.523733),
(-0.287233,0.249212,-0.607756),
(-0.303264,0.264350,-0.742153),
(-0.271324,0.258711,-0.856906),
(-0.322375,0.277419,-0.901857),
(-0.438870,0.300451,-0.904676),
(-0.526790,0.326851,-0.831028),
(-0.613105,0.328382,-0.827364),
(-0.740142,0.329892,-0.767275),
(-0.726473,0.331461,-0.653252),
(-0.602260,0.330965,-0.631189),
(-0.443503,0.304114,-0.585725),
(-0.426867,0.291867,-0.525453),
(-0.483943,0.281931,-0.428702),
(-0.664134,0.309214,-0.432713),
(-0.782475,0.306808,-0.467563),
(-0.877450,0.269969,-0.415969),
(-0.907153,0.222859,-0.319046),
(-0.821015,0.225148,-0.224635),
(-0.626811,0.236137,-0.205420),
(-0.492893,0.206668,-0.170341),
(-0.453693,0.195613,-0.048821),
(-0.507749,0.173349,0.076025),
(-0.695969,0.133065,0.121281),
(-0.779359,0.113537,0.171666),
(-0.863745,0.100001,0.428953),
(-0.863745,0.100001,0.428953),
]
deg=3
start = 0.0
stop = 1.0
curv=[
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,1,2,3
]
parm=[
0.000000,0.018868,0.037736,0.056604,0.075472,0.094340,0.113208,0.132075,0.150943,0.169811,0.188679,0.207547,0.226415,0.245283,0.264151,0.283019,0.301887,0.320755,0.339623,0.358491,0.377358,0.396226,0.415094,0.433962,0.452830,0.471698,0.490566,0.509434,0.528302,0.547170,0.566038,0.584906,0.603774,0.622642,0.641509,0.660377,0.679245,0.698113,0.716981,0.735849,0.754717,0.773585,0.792453,0.811321,0.830189,0.849057,0.867925,0.886792,0.905660,0.924528,0.943396,0.962264,0.981132,1.000000
]

def k(i):
    return parm[i]

def f(i, n, u):
    return (u-k(i))/(k(i+n)-k(i))

def g(i, n, u):
    return (k(i+n)-u)/(k(i+n)-k(i))

def N(i, n, u):
    if(n==0):
        if(u >= k(i) and u < k(i+1)):
            return 1
        else:
            return 0
    else:
        return f(i,n, u)*N(i, n-1, u) + g(i+1,n, u)*N(i+1, n-1, u)

if __name__=="__main__":
    V = np.array(v)
    print "Nurbs Test"
    p=[]
    for i in range(0, 100):
        point = np.zeros(3);
        u = float(i)/100
        for j in range(0,len(curv)):
            point=point+N(j,3,u)*V[curv[j]-1]
        p.append(point)
    fig, ax = plt.subplots()
    ax = fig.gca(projection='3d')
    x,y,z = zip(*v)
    print p
    x2,y2,z2 = zip(*p[5:-5])
    #ax.plot(x, y, z)
    ax.plot(x2, y2, z2)
    ax.set_xlim(-1, 1.0)
    ax.set_ylim(-1, 1.0)
    ax.set_zlim(bottom=-1.0, top=1.0)
    ax.grid()
    plt.show()
